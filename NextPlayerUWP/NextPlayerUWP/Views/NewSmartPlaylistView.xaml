<Page
    x:Class="NextPlayerUWP.Views.NewSmartPlaylistView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWP.Helpers"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    DataContext="{Binding Source={StaticResource Locator}, Path=NewSmartPlaylistVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <DataTemplate x:Key="PlaylistRuleTemplate" x:DataType="data:PlaylistRule">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ComboBox 
                    Grid.Row="0"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Margin="0,0,4,4"
                    DisplayMemberPath="Label"
                    SelectedValuePath="Option"
                    SelectedValue="{Binding SelectedItem, Mode=TwoWay}"
                    ItemsSource="{x:Bind Items}"/>
                <ComboBox
                    Grid.Row="0"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Margin="4,0,0,4"
                    DisplayMemberPath="Label"
                    SelectedValuePath="Option"
                    SelectedValue="{Binding SelectedComparison, Mode=TwoWay}"
                    ItemsSource="{x:Bind ComparisonItems, Mode=OneWay}"/>
                <TextBox
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Center"
                    Margin="0,0,0,4"
                    Visibility="{x:Bind IsTextBoxVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                    Text="{x:Bind UserInput, Mode=TwoWay}"/>
                <DatePicker
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Center"
                    Margin="0,0,0,4"
                    HorizontalAlignment="Stretch"
                    Date="{x:Bind SelectedDate, Converter={StaticResource DateTimeToDateTimeOffsetConverter}, Mode=TwoWay}"
                    Visibility="{x:Bind IsDatePickerVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                    />
                <TimePicker
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Center"
                    Margin="0,0,0,4"
                    HorizontalAlignment="Stretch"
                    Time="{x:Bind SelectedTime, Mode=TwoWay}"
                    ClockIdentifier="24HourClock"
                    Visibility="{x:Bind IsTimePickerVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                    />
                <ComboBox
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Center"
                    Margin="0,8,0,8"
                    MinWidth="128"
                    DisplayMemberPath="Label"
                    SelectedValuePath="Option"
                    SelectedValue="{Binding SelectedBoolOperator, Mode=TwoWay}"
                    ItemsSource="{x:Bind BoolOperators, Mode=OneWay}"
                    Visibility="{x:Bind IsBoolOperatorsVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <controls:PageHeader Grid.Row="0"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                x:Uid="PageHeaderNewSmartPlaylist"
                Content="New smart playlist" 
                VisualStateNarrowMinWidth="0" 
                VisualStateNormalMinWidth="720">
            <AppBarButton 
                x:Uid="AppBarButtonSave"
                Label="Save"
                Icon="Save"
                Click="{x:Bind ViewModel.SavePlaylist}"/>
        </controls:PageHeader>
        <TextBlock
            Grid.Row="1"
            x:Uid="TBErrorSmartPlaylist"
            Text="Please fill all fields correctly."
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="Red"
            Visibility="{x:Bind ViewModel.ErrorVisibility, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"/>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Uid="TBName"
                Grid.Row="0"
                Grid.Column="0"
                Margin="12,0,4,0"
                Text="Name"
                VerticalAlignment="Center"/>
            <TextBox 
                Grid.Row="0"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Margin="4,4,12,4"
                Text="{x:Bind ViewModel.PlaylistName, Mode=TwoWay}"/>
            <TextBlock
                x:Uid="TBMaxSongsNumber"
                Grid.Row="1"
                Grid.Column="0"
                Margin="12,0,4,0"
                Text="Max songs"
                VerticalAlignment="Center"/>
            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Margin="4,4,12,4"
                Text="{x:Bind ViewModel.MaxSongsNumber, Mode=TwoWay}"/>
            <TextBlock
                x:Uid="TBDefaultSort"
                Grid.Row="2"
                Grid.Column="0"
                Margin="12,0,4,0"
                Text="Select by"
                VerticalAlignment="Center"/>
            <ComboBox 
                Grid.Row="2"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Margin="4,4,12,4"
                DisplayMemberPath="Label"
                SelectedValuePath="Option"
                SelectedItem="{x:Bind ViewModel.SelectedSortRule, Converter={StaticResource ComboBoxItemValueConverter}, Mode=TwoWay}"
                ItemsSource="{x:Bind ViewModel.SortRules, Mode=OneWay}"/>
            <ListView 
                Grid.Row="3"
                Grid.ColumnSpan="2"
                Margin="12,4,12,4"
                ItemsSource="{Binding PlaylistRules, Mode=TwoWay}"
                ItemTemplate="{StaticResource PlaylistRuleTemplate}" 
                SelectionMode="None"
                IsItemClickEnabled="False">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>  
            </ListView>
            <Button 
                x:Uid="ButtonAdd"
                Grid.Row="4"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                Margin="12,4,0,4"
                MinWidth="128"
                Content="Add"
                Click="{x:Bind ViewModel.AddRule}"/>
            <Button 
                x:Uid="ButtonDelete"
                Grid.Row="4"
                Grid.Column="2"
                HorizontalAlignment="Stretch"
                Margin="4,4,12,4"
                MinWidth="128"
                Content="Delete"
                Click="{x:Bind ViewModel.DeleteRule}"/>
        </Grid>
    </Grid>
</Page>
