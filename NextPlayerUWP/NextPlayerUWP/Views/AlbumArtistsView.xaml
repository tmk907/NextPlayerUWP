<Page
    x:Class="NextPlayerUWP.Views.AlbumArtistsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkitcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=AlbumArtistsVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <CollectionViewSource x:Name="AlbumArtistsCVS" Source="{Binding GroupedAlbumArtists}" IsSourceGrouped="True"/>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNow" Text="Play now" 
                        Click="{x:Bind ViewModel.PlayNow}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                        Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                        Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                        Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIPin" Text="Pin" 
                        Click="{x:Bind ViewModel.Pin}" CommandParameter="{Binding}"/>
        </MenuFlyout>
        <Style x:Key="ArtistItemStyleLeft" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{ThemeResource ListItemForegroundSolid}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ArtistItemStyleRight" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{ThemeResource ListItemForegroundLight}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <DataTemplate x:Key="AlbumArtistItemTemplate" x:DataType="data:AlbumArtistItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="{ThemeResource SlideableListItemLeftIcon}"
	            LeftLabel="{ThemeResource SlideableListItemLeftLabel}"
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                        Text="{x:Bind DisplayAlbumArtist}"
                        Style="{StaticResource ArtistItemStyleLeft}"/>
                    <TextBlock Grid.Column="1"
                        Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                        Style="{StaticResource ArtistItemStyleRight}"/>
                    <TextBlock Grid.Column="2"
                        Text="{x:Bind SongsNumber}"
                        Style="{StaticResource ArtistItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="GroupHeaderItemTemplate" x:DataType="data:GroupList">
            <TextBlock Text="{x:Bind Key}" 
                    Style="{StaticResource GroupHeaderTextBlockStyle}"/>
        </DataTemplate>
    </Page.Resources>
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="Mobile">
                        <VisualState.StateTriggers>
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="Column1.Width" Value="0"/>
                            <Setter Target="Column3Search.Width" Value="*"/>
                            <Setter Target="AlbumArtistsListView.CanDragItems" Value="False"/>
                            <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplateMobile}"/>
                            <Setter Target="ZoomedOutListView.ItemContainerStyle" Value="{StaticResource ZoomedOutItemContainerStyleMobile}"/>
                            <Setter Target="ZoomedOutListView.ItemsPanel" Value="{StaticResource ZoomedOutItemsPanelTemplateMobile}"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Desktop">
                        <VisualState.StateTriggers>
                            <triggers:CompositeStateTrigger Operator="Or">
                                <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                                <triggers:DeviceFamilyStateTrigger DeviceFamily="Xbox"/>
                            </triggers:CompositeStateTrigger>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="Column1.Width" Value="*"/>
                            <Setter Target="Column3Search.Width" Value="200"/>
                            <Setter Target="AlbumArtistsListView.CanDragItems" Value="True"/>
                            <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplate}"/>
                            <Setter Target="ZoomedOutListView.ItemContainerStyle" Value="{StaticResource ZoomedOutItemContainerStyle}"/>
                            <Setter Target="ZoomedOutListView.ItemsPanel" Value="{StaticResource ZoomedOutItemsPanelTemplateDesktop}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <controls:PageHeader 
                Grid.Row="0" 
                Grid.ColumnSpan="2"
                x:Name="PageHeader"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                x:Uid="PageHeaderAlbumArtists"
                VisualStateNarrowMinWidth="0" 
                VisualStateNormalMinWidth="720">
            <AppBarButton
                x:Uid="AppBarButtonSelect"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToInvertedVisibilityConverter}, Mode=OneWay}"
                Label="Select"
                Click="EnableMultipleSelection">
                <AppBarButton.Content>
                    <Viewbox Height="22">
                        <TextBlock Text="&#xE762;"  FontFamily="Segoe MDL2 Assets"/>
                    </Viewbox>
                </AppBarButton.Content>
            </AppBarButton>
            <AppBarButton
                x:Uid="AppBarButtonSelectAll"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Select all"
                Icon="SelectAll"
                Click="SelectAll"
                />
            <AppBarButton
                x:Uid="AppBarButtonClearSelection"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Clear selection"
                Icon="ClearSelection"
                Click="DisableMultipleSelection"/>
        </controls:PageHeader>
            <Grid Grid.Column="0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="48"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Gray">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="Column1"/>
                        <ColumnDefinition x:Name="Column2Sort" Width="Auto"/>
                        <ColumnDefinition x:Name="Column3Search" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                <AutoSuggestBox  Grid.Column="2" 
                    x:Name="SearchBox"
                    PlaceholderText="search" 
                    QueryIcon="Find" 
                    Margin="4,0,12,0" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    DisplayMemberPath="AlbumArtist"
                    TextMemberPath="AlbumArtist"
                    TextChanged="{x:Bind ViewModel.AutoSuggestBox_TextChanged}"
                    QuerySubmitted="{x:Bind ViewModel.AutoSuggestBox_QuerySubmitted}"
                    SuggestionChosen="{x:Bind ViewModel.AutoSuggestBox_SuggestionChosen}"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock x:Uid="TBSortBy" Text="Sort by" Margin="8,0,0,2" VerticalAlignment="Center" FontSize="15"/>
                        <ComboBox Margin="4,0,8,0" 
                            BorderThickness="0" 
                            Width="Auto" 
                            VerticalAlignment="Center"
                            ItemsSource="{x:Bind ViewModel.ComboBoxItemValues}"
                            DisplayMemberPath="Label"
                            SelectedItem="{x:Bind ViewModel.SelectedComboBoxItem, Converter={StaticResource ComboBoxItemValueConverter}, Mode=TwoWay}"
                            />
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1">
                    <SemanticZoom>
                        <SemanticZoom.ZoomedInView>
                            <mycontrols:AlternatingRowListView x:Name="AlbumArtistsListView"
                                EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                                OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                                ItemsSource="{Binding Source={StaticResource AlbumArtistsCVS}}"
                                ItemTemplate="{StaticResource AlbumArtistItemTemplate}"
                                SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}"
                                IsItemClickEnabled="{x:Bind ViewModel.IsClickEnabled, Mode=OneWay}"
                                ItemClick="{x:Bind ViewModel.ItemClicked }"
                                ShowsScrollingPlaceholders="False"
                                Margin="12,0,0,0"
                                ItemContainerStyle="{StaticResource ZoomedInListViewItemContainerStyle}"
                                CanDragItems="True"
                                DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                                <mycontrols:AlternatingRowListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsStackPanel Orientation="Vertical"/>
                                    </ItemsPanelTemplate>
                                </mycontrols:AlternatingRowListView.ItemsPanel>
                                <mycontrols:AlternatingRowListView.GroupStyle>
                                    <GroupStyle HeaderTemplate="{StaticResource GroupHeaderItemTemplate}" 
                                            HeaderContainerStyle="{StaticResource GroupHeaderContainerStyle}"/>
                                </mycontrols:AlternatingRowListView.GroupStyle>
                            </mycontrols:AlternatingRowListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView
                                x:Name="ZoomedOutListView"
                                ItemsSource="{Binding Source={StaticResource AlbumArtistsCVS}, Path=CollectionGroups}">
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                </Grid>
            </Grid>
        </Grid>
    </Page>

