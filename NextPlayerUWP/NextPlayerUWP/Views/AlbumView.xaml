<Page
    x:Class="NextPlayerUWP.Views.AlbumView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkitcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=AlbumVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                            Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                            Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                            Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIGoToArtist" Text="Go To Artist" 
                            Click="{x:Bind ViewModel.GoToArtist}" CommandParameter="{Binding}" />
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIShowDetails" Text="Show details" 
                            Click="{x:Bind ViewModel.ShowDetails}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIEditTags" Text="Edit" 
                            Click="{x:Bind ViewModel.EditTags}" CommandParameter="{Binding}"/>
            <!--<MenuFlyoutItem x:Uid="MFIShare" Text="Share" 
                            Click="{x:Bind ViewModel.Share}" CommandParameter="{Binding}"/>-->
        </MenuFlyout>
        <SolidColorBrush x:Key="ForegroundColor" x:Name="ForegroundColor" Color="{ThemeResource SystemBaseHighColor}"/>
        <Style x:Key="AlbumDescriptionAlbumNameStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="FontSize" Value="27"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        </Style>
        <Style x:Key="AlbumDescriptionAlbumArtistStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        </Style>
        <Style x:Key="AlbumDescription2TBStyle" TargetType="TextBlock" BasedOn="{StaticResource TitleTextBlockStyle}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        </Style>
        <Style x:Key="AlbumButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource UserAccentBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="16,4,16,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <!--<VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>-->
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlyoutButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4,4,8,4"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="AlbumSongItemTemplateDesktop" x:DataType="data:SongItem">
            <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                    Text="{x:Bind TrackNumber}"
                    Style="{StaticResource SongItemStyleIndex}"/>
                <TextBlock Grid.Column="1"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleLeft}"/>
                <TextBlock Grid.Column="2"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleCenter}"/>
                <TextBlock Grid.Column="3"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="AlbumSongItemTemplateMobile" x:DataType="data:SongItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="Add" 
	            LeftLabel="Queue" 
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.RowSpan="2"
                    Text="{x:Bind TrackNumber}"
                    Style="{StaticResource SongItemStyleIndex}"
                    Foreground="{StaticResource ForegroundColor}"/>
                    <TextBlock Grid.Column="1" Grid.Row="0"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleTop}"
                    Foreground="{StaticResource ForegroundColor}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleBottom}"
                    Foreground="{StaticResource ForegroundColor}"/>
                    <TextBlock Grid.Column="2" Grid.RowSpan="2"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"
                    Foreground="{StaticResource ForegroundColor}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="AlbumSongItemTemplateMobileWide" x:DataType="data:SongItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="Add" 
	            LeftLabel="Queue" 
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                    Text="{x:Bind TrackNumber}"
                    Style="{StaticResource SongItemStyleIndex}"
                    Foreground="{StaticResource ForegroundColor}"/>
                    <TextBlock Grid.Column="1"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleLeft}"
                    Foreground="{StaticResource ForegroundColor}"/>
                    <TextBlock Grid.Column="2"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleCenter}"
                    Foreground="{StaticResource ForegroundColor}"/>
                    <TextBlock Grid.Column="3"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"
                    Foreground="{StaticResource ForegroundColor}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="MobileWide">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="480"/>
                            <triggers:OrientationStateTrigger Orientation="Portrait"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumSongsListView.ItemTemplate" Value="{StaticResource AlbumSongItemTemplateMobileWide}"/>
                        <Setter Target="AlbumSongsListView.EvenRowBackground" Value="{ThemeResource ListViewItemBackgroundSecondSemiTr}"/>
                        <Setter Target="AlbumSongsListView.OddRowBackground" Value="{ThemeResource ListViewItemBackgroundNormalSemiTr}"/>
                        <Setter Target="AlbumCoverImageBG.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Opacity" Value="1"/>
                        <Setter Target="ForegroundColor.Color" Value="White"/>
                        <Setter Target="AlbumSongsListView.CanDragItems" Value="False"/>
                        <Setter Target="MobileLandscapeView.Visibility" Value="Collapsed"/>
                        <Setter Target="PortraitView.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileNarrow">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="0"/>
                            <triggers:OrientationStateTrigger Orientation="Portrait"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumSongsListView.ItemTemplate" Value="{StaticResource AlbumSongItemTemplateMobile}"/>
                        <Setter Target="AlbumSongsListView.EvenRowBackground" Value="{ThemeResource ListViewItemBackgroundSecondSemiTr}"/>
                        <Setter Target="AlbumSongsListView.OddRowBackground" Value="{ThemeResource ListViewItemBackgroundNormalSemiTr}"/>
                        <Setter Target="AlbumCoverImageBG.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Opacity" Value="1"/>
                        <Setter Target="ForegroundColor.Color" Value="White"/>
                        <Setter Target="AlbumSongsListView.CanDragItems" Value="False"/>
                        <Setter Target="MobileLandscapeView.Visibility" Value="Collapsed"/>
                        <Setter Target="PortraitView.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileLandscape">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:OrientationStateTrigger Orientation="Landscape"/>
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PortraitView.Visibility" Value="Collapsed"/>
                        <Setter Target="MobileLandscapeView.Visibility" Value="Visible"/>
                        <Setter Target="AlbumCoverImageBG.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Opacity" Value="1"/>
                        <Setter Target="ForegroundColor.Color" Value="White"/>
                        <Setter Target="AlbumSongsListView.CanDragItems" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="Or">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Xbox"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumSongsListView.ItemTemplate" Value="{StaticResource AlbumSongItemTemplateDesktop}"/>
                        <Setter Target="AlbumSongsListView.EvenRowBackground" Value="{ThemeResource ListViewItemBackgroundSecond}"/>
                        <Setter Target="AlbumSongsListView.OddRowBackground" Value="{ThemeResource ListViewItemBackgroundNormal}"/>
                        <Setter Target="AlbumCoverImage.Visibility" Value="Visible"/>
                        <Setter Target="DarkenLayer.Visibility" Value="Collapsed"/>
                        <Setter Target="DarkenLayer.Opacity" Value="0"/>
                        <Setter Target="ForegroundColor.Color" Value="{ThemeResource SystemBaseHighColor}"/>
                        <Setter Target="AlbumSongsListView.CanDragItems" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <controls:PageHeader Grid.Row="0" Grid.ColumnSpan="2"
            BackButtonVisibility="Collapsed" 
            Frame="{x:Bind Frame, Mode=OneWay}"
            x:Uid="PageHeaderAlbum"
            Content="Album" 
            VisualStateNarrowMinWidth="0" 
            VisualStateNormalMinWidth="720">
            <AppBarButton
            x:Uid="AppBarButtonShuffleAll"
            x:Name="ShuffleAppBarButton"
            Label="Shuffle all"
            Icon="Shuffle"/>
        </controls:PageHeader>
        <Image x:Name="AlbumCoverImageBG" Grid.Row="1" 
                Stretch="UniformToFill"
                x:DeferLoadStrategy="Lazy"
                Visibility="Collapsed"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                ImageOpened="AlbumCoverImageBG_ImageOpened">
            <Image.Source>
                <BitmapImage 
                    UriSource="{Binding Album.ImageUri, Mode=OneWay}"/>
            </Image.Source>
        </Image>
        <Rectangle x:Name="DarkenLayer" 
                    x:DeferLoadStrategy="Lazy"
                    Visibility="Collapsed"
                    Grid.Row="1"
                    Fill="#80161616"/>
        <ContentDialog x:Name="ContentDialogEditAlbum"
                Grid.RowSpan="2" Grid.ColumnSpan="2"
                x:Uid="ContentDialogEditAlbum"
                VerticalAlignment="Center"
                Title="Edit"
                PrimaryButtonText="Save"
                PrimaryButtonClick="{x:Bind ViewModel.SaveAlbum}"
                SecondaryButtonText="Cancel"
                VerticalContentAlignment="Stretch"
                MaxWidth="360"
                Height="Auto">
            <ContentDialog.Content>
                <StackPanel Orientation="Vertical">
                    <TextBlock Margin="0,4,4,0"
                                    x:Uid="TBAlbum"
                                    VerticalAlignment="Center"
                                    Text="Album:"/>
                    <TextBox Margin="0,4,4,0"
                                  Text="{Binding EditedAlbum.AlbumParam, Mode=TwoWay}"/>
                    <TextBlock Margin="0,4,4,0"
                                    x:Uid="TBAlbumArtist"
                                    VerticalAlignment="Center"
                                    Text="Album artist:"/>
                    <TextBox Margin="0,4,4,0"
                                  Text="{Binding EditedAlbum.AlbumArtist, Mode=TwoWay}"/>
                    <TextBlock Margin="0,4,4,0"
                                    VerticalAlignment="Center"
                                    x:Uid="TBYear"
                                    Text="Year:"/>
                    <TextBox Margin="0,4,4,0"
                                  Text="{Binding EditedAlbum.Year, Mode=TwoWay}"/>
                </StackPanel>
            </ContentDialog.Content>
        </ContentDialog>
        <Grid Grid.Row="1" Grid.Column="0"
              x:Name="PortraitView">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Grid.Row="0"
                    Margin="12,12,12,12"
                    x:Name="AlbumCoverImage"
                    x:DeferLoadStrategy="Lazy" 
                    Visibility="Collapsed"
                    ImageOpened="AlbumCoverImage_ImageOpened">
                <Image.Source>
                    <BitmapImage
                        UriSource="{Binding Album.ImageUri, Mode=OneWay}"
                        DecodePixelType="Logical"
                        DecodePixelHeight="220" DecodePixelWidth="220"/>
                </Image.Source>
            </Image>
            <Grid Grid.Column="1" Grid.Row="0" Margin="12,12,12,12">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                        Text="{x:Bind ViewModel.Album.Album, Mode=OneWay}" 
                        Style="{StaticResource AlbumDescriptionAlbumNameStyle}"/>
                <TextBlock Grid.Row="1"
                        Text="{x:Bind ViewModel.Album.AlbumArtist, Mode=OneWay}"
                        Style="{StaticResource AlbumDescriptionAlbumArtistStyle}"/>
                <TextBlock Grid.Row="2"
                            Text="{Binding Album.Year, Converter={StaticResource YearConverter}, Mode=OneWay}"
                            Style="{StaticResource AlbumDescription2TBStyle}"/>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                        Text="{Binding Album.Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                        Style="{StaticResource AlbumDescription2TBStyle}"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <Button Click="{x:Bind ViewModel.PlayAlbum}"
                                Style="{StaticResource AlbumButtonStyle}">
                            <Button.Content>
                                <TextBlock Text="&#xE102;" FontFamily="Segoe MDL2 Assets"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource AlbumButtonStyle}">
                            <Button.Content>
                                <TextBlock Text="&#xE109;" FontFamily="Segoe MDL2 Assets"/>
                            </Button.Content>
                            <Button.Flyout>
                                <Flyout Placement="Bottom">
                                    <StackPanel>
                                        <Button x:Uid="ButtonPlayNext" 
                                                Content="Play next" 
                                                Style="{StaticResource FlyoutButtonTemplate}"
                                                Click="{x:Bind ViewModel.PlayAlbumNext}"/>
                                        <Button x:Uid="ButtonAddToNowPlaying" 
                                                Content="Add to now playing" 
                                                Style="{StaticResource FlyoutButtonTemplate}"
                                                Click="{x:Bind ViewModel.AddAlbumToNowPlaying}"/>
                                        <Button x:Uid="ButtonAddToPlaylist" 
                                                Content="Add to playlist" 
                                                Style="{StaticResource FlyoutButtonTemplate}"
                                                Click="{x:Bind ViewModel.AddAlbumToPlaylist}"/>
                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                        <Button Click="EditAlbum_Click"
                                Style="{StaticResource AlbumButtonStyle}">
                            <Button.Content>
                                <TextBlock Text="&#xE104;" FontFamily="Segoe MDL2 Assets"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
            <mycontrols:AlternatingRowListView Grid.Row="1" Grid.ColumnSpan="2"
                    x:Name="AlbumSongsListView"
                    EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                    OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                    ItemsSource="{Binding Songs}"
                    ItemTemplate="{StaticResource AlbumSongItemTemplateDesktop}"
                    ItemContainerStyle="{StaticResource ListViewItemContainerStyle2}"
                    IsItemClickEnabled="True"
                    ItemClick="{x:Bind ViewModel.ItemClicked }"
                    Margin="12,0,0,4"
                    SelectionMode="None"
                    CanDragItems="True"
                    DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                <mycontrols:AlternatingRowListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </mycontrols:AlternatingRowListView.ItemsPanel>
            </mycontrols:AlternatingRowListView>
        </Grid>
        <ScrollViewer 
                Grid.Row="1" Grid.Column="0"
                x:Name="MobileLandscapeView"
                x:DeferLoadStrategy="Lazy" 
                Visibility="Collapsed"
                ScrollViewer.VerticalScrollMode="Enabled" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" Grid.Row="0" Margin="12,12,12,12">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                            Text="{x:Bind ViewModel.Album.Album, Mode=OneWay}" 
                            Style="{StaticResource AlbumDescriptionAlbumNameStyle}"/>
                        <TextBlock Grid.Row="1"
                            Text="{x:Bind ViewModel.Album.AlbumArtist, Mode=OneWay}"
                            Style="{StaticResource AlbumDescriptionAlbumArtistStyle}"/>
                        <TextBlock Grid.Row="2"
                                Text="{Binding Album.Year, Converter={StaticResource YearConverter}, Mode=OneWay}"
                                Style="{StaticResource AlbumDescription2TBStyle}"/>
                        <Grid Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0"
                                Text="{Binding Album.Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                                Style="{StaticResource AlbumDescription2TBStyle}"/>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <Button Click="{x:Bind ViewModel.PlayAlbum}"
                                    Style="{StaticResource AlbumButtonStyle}">
                                    <Button.Content>
                                        <TextBlock Text="&#xE102;" FontFamily="Segoe MDL2 Assets"/>
                                    </Button.Content>
                                </Button>
                                <Button Style="{StaticResource AlbumButtonStyle}">
                                    <Button.Content>
                                        <TextBlock Text="&#xE109;" FontFamily="Segoe MDL2 Assets"/>
                                    </Button.Content>
                                    <Button.Flyout>
                                        <Flyout Placement="Bottom">
                                            <StackPanel>
                                                <Button x:Uid="ButtonPlayNext" 
                                                    Content="Play next" 
                                                    Style="{StaticResource FlyoutButtonTemplate}"
                                                    Click="{x:Bind ViewModel.PlayAlbumNext}"/>
                                                <Button x:Uid="ButtonAddToNowPlaying" 
                                                    Content="Add to now playing" 
                                                    Style="{StaticResource FlyoutButtonTemplate}"
                                                    Click="{x:Bind ViewModel.AddAlbumToNowPlaying}"/>
                                                <Button x:Uid="ButtonAddToPlaylist" 
                                                    Content="Add to playlist" 
                                                    Style="{StaticResource FlyoutButtonTemplate}"
                                                    Click="{x:Bind ViewModel.AddAlbumToPlaylist}"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                                <Button Click="EditAlbum_Click"
                                    Style="{StaticResource AlbumButtonStyle}">
                                    <Button.Content>
                                        <TextBlock Text="&#xE104;" FontFamily="Segoe MDL2 Assets"/>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <mycontrols:AlternatingRowListView Grid.Row="1" Grid.ColumnSpan="2"
                        EvenRowBackground="{ThemeResource ListViewItemBackgroundSecondSemiTr}"
                        OddRowBackground="{ThemeResource ListViewItemBackgroundNormalSemiTr}"
                        ItemsSource="{Binding Songs}"
                        ItemTemplate="{StaticResource AlbumSongItemTemplateMobileWide}"
                        ItemContainerStyle="{StaticResource ListViewItemContainerStyle2}"
                        IsItemClickEnabled="True"
                        ItemClick="{x:Bind ViewModel.ItemClicked }"
                        Margin="12,0,0,4"
                        SelectionMode="None"
                        CanDragItems="False"
                        ScrollViewer.VerticalScrollMode="Disabled">
                        <mycontrols:AlternatingRowListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </mycontrols:AlternatingRowListView.ItemsPanel>
                    </mycontrols:AlternatingRowListView>
                </Grid>
            </ScrollViewer>
    </Grid>
</Page>
