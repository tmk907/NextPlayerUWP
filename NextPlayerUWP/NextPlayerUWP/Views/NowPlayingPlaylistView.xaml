<Page
    x:Class="NextPlayerUWP.Views.NowPlayingPlaylistView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    DataContext="{Binding Source={StaticResource Locator}, Path=NowPlayingPlaylistVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                            Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIDelete" Text="Delete" 
                            Click="{x:Bind ViewModel.Delete}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIGoToArtist" Text="Go To Artist" 
                            Click="{x:Bind ViewModel.GoToArtist}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIGoToAlbum" Text="Go To Album" 
                            Click="{x:Bind ViewModel.GoToAlbum}" CommandParameter="{Binding}" />
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIShowDetails" Text="Show details" 
                            Click="{x:Bind ViewModel.ShowDetails}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIEditTags" Text="Edit" 
                            Click="{x:Bind ViewModel.EditTags}" CommandParameter="{Binding}"/>
        </MenuFlyout>

        <DataTemplate x:Key="SongItemTemplateDesktop" x:DataType="data:SongItem">
            <Grid RightTapped="ListViewItem_RightTapped" 
                  Background="{x:Bind Path=IsPlaying, Converter={StaticResource BoolToBackgroundHighlightConverter}, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" 
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleLeft}"/>
                <TextBlock Grid.Column="1" 
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleCenter}"/>
                <TextBlock Grid.Column="2" 
                    Text="{x:Bind Album}"
                    Style="{StaticResource SongItemStyleCenter}"/>
                <TextBlock Grid.Column="3" 
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SongItemTemplateMobile" x:DataType="data:SongItem">
            <Grid RightTapped="ListViewItem_RightTapped"
                  Background="{x:Bind Path=IsPlaying, Converter={StaticResource BoolToBackgroundHighlightConverter}, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleTop}"/>
                <TextBlock Grid.Column="0" Grid.Row="1"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleBottom}"/>
                <TextBlock Grid.Column="1" Grid.RowSpan="2"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SongItemTemplateMobileWide" x:DataType="data:SongItem">
            <Grid RightTapped="ListViewItem_RightTapped" 
                  Background="{x:Bind Path=IsPlaying, Converter={StaticResource BoolToBackgroundHighlightConverter}, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleTop}"/>
                <TextBlock Grid.Column="0" Grid.Row="1"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleBottom}"/>
                <TextBlock Grid.Column="1" Grid.Row="1"
                    Text="{x:Bind Album}"
                    Style="{StaticResource SongItemStyleBottom}"/>
                <TextBlock Grid.Column="2" Grid.RowSpan="2"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="SongDescriptionBigStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="FontSize" Value="27"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="SongDescriptionMediumStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="SongDescriptionSmallStyle" TargetType="TextBlock" BasedOn="{StaticResource TitleTextBlockStyle}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="TransparentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource UserAccentColor}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FontIconStyle" TargetType="FontIcon">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="24"/>
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="MobileWide">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="480"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NowPlayingPlaylistListView.ItemTemplate" Value="{StaticResource SongItemTemplateMobileWide}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileNarrow">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="0"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NowPlayingPlaylistListView.ItemTemplate" Value="{StaticResource SongItemTemplateMobile}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NowPlayingPlaylistListView.ItemTemplate" Value="{StaticResource SongItemTemplateDesktop}"/>
                        <Setter Target="SongInfoGrid.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <controls:PageHeader Grid.Row="0"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                x:Uid="PageHeaderNowPlayingPlaylist"
                Content="Now playing" 
                VisualStateNarrowMinWidth="0" 
                VisualStateNormalMinWidth="720">
            <AppBarButton Icon="Save"
                x:Uid="AppBarButtonSave"
                Label="Save"
                Click="{x:Bind ViewModel.SavePlaylist}"/>
        </controls:PageHeader>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" x:Name="SongInfoGrid" x:DeferLoadStrategy="Lazy" Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0" 
                           Margin="12,12,12,12" 
                           Width="220" Height="220" 
                           Fill="{StaticResource UserAccentBrush}"/>
                <Image Grid.Column="0"
                       Margin="12,12,12,12">
                    <Image.Source>
                        <BitmapImage UriSource="{Binding CoverUri}"
                                     DecodePixelType="Logical"
                                     DecodePixelHeight="220" DecodePixelWidth="220"/>
                    </Image.Source>
                </Image>
                <Grid Grid.Column="1" Grid.Row="0" Margin="12,12,12,12">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                               Text="{Binding CurrentSong.Title}" 
                               Style="{StaticResource SongDescriptionBigStyle}"/>
                    <TextBlock Grid.Row="1"
                               Text="{Binding CurrentSong.Artist}"
                               Style="{StaticResource SongDescriptionMediumStyle}"/>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   Text="{Binding CurrentSong.Album}"
                                   Style="{StaticResource SongDescriptionSmallStyle}"/>
                        <TextBlock Grid.Column="1"
                                   Text="{Binding CurrentSong.Year, Converter={StaticResource YearConverter}}"
                                   Margin="12,0,0,0"
                                   Style="{StaticResource SongDescriptionSmallStyle}"/>
                    </Grid>
                    <Grid Grid.Row="3">
                        <StackPanel Orientation="Horizontal" Margin="-18,0,0,0">
                            <Button Style="{StaticResource TransparentButtonStyle}"
                                    Click="{x:Bind ViewModel.RateSong}"
                                    Width="18"
                                    Height="36"
                                    Tag="0"/>
                            <Button Style="{StaticResource TransparentButtonStyle}"
                                    Click="{x:Bind ViewModel.RateSong}"
                                    Tag="1"
                                    Width="36"
                                    Height="36">
                                <Button.Content>
                                    <FontIcon Glyph="{Binding CurrentSong.Rating, Converter={StaticResource IntToRatingStarConverter}, ConverterParameter=1}"
                                              Style="{StaticResource FontIconStyle}"/>
                                </Button.Content>
                            </Button>
                            <Button Style="{StaticResource TransparentButtonStyle}"
                                    Click="{x:Bind ViewModel.RateSong}"
                                    Tag="2"
                                    Width="40"
                                    Height="40">
                                <Button.Content>
                                    <FontIcon Glyph="{Binding CurrentSong.Rating, Converter={StaticResource IntToRatingStarConverter}, ConverterParameter=2}"
                                              Style="{StaticResource FontIconStyle}"/>
                                </Button.Content>
                            </Button>
                            <Button Style="{StaticResource TransparentButtonStyle}"
                                    Click="{x:Bind ViewModel.RateSong}"
                                    Tag="3"
                                    Width="40"
                                    Height="40">
                                <Button.Content>
                                    <FontIcon Glyph="{Binding CurrentSong.Rating, Converter={StaticResource IntToRatingStarConverter}, ConverterParameter=3}"
                                              Style="{StaticResource FontIconStyle}"/>
                                </Button.Content>
                            </Button>
                            <Button Style="{StaticResource TransparentButtonStyle}"
                                    Click="{x:Bind ViewModel.RateSong}"
                                    Tag="4"
                                    Width="40"
                                    Height="40">
                                <Button.Content>
                                    <FontIcon Glyph="{Binding CurrentSong.Rating, Converter={StaticResource IntToRatingStarConverter}, ConverterParameter=4}"
                                              Style="{StaticResource FontIconStyle}"/>
                                </Button.Content>
                            </Button>
                            <Button Style="{StaticResource TransparentButtonStyle}"
                                    Click="{x:Bind ViewModel.RateSong}"
                                    Tag="5"
                                    Width="40"
                                    Height="40">
                                <Button.Content>
                                    <FontIcon Glyph="{Binding CurrentSong.Rating, Converter={StaticResource IntToRatingStarConverter}, ConverterParameter=5}"
                                              Style="{StaticResource FontIconStyle}"/>
                                </Button.Content>
                            </Button>
                            
                        </StackPanel>
                    </Grid>

                </Grid>
            </Grid>
            <mycontrols:AlternatingRowListView 
                Grid.Row="1"
                x:Name="NowPlayingPlaylistListView"
                EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                ItemsSource="{x:Bind ViewModel.Songs}"
                ItemTemplate="{StaticResource SongItemTemplateDesktop}"
                IsItemClickEnabled="True"
                ItemClick="{x:Bind ViewModel.ItemClicked}"  
                Margin="12,0,0,4"
                SelectionMode="None"
                AllowDrop="True"
                CanDragItems="True"
                CanReorderItems="True">
                <mycontrols:AlternatingRowListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </mycontrols:AlternatingRowListView.ItemsPanel>
                <mycontrols:AlternatingRowListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Margin" Value="0,0,12,0"/>
                        <Setter Property="Padding" Value="0,0,0,0"/>
                    </Style>
                </mycontrols:AlternatingRowListView.ItemContainerStyle>
            </mycontrols:AlternatingRowListView>
        </Grid>
    </Grid>
</Page>
