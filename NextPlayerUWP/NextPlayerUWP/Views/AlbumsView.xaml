<Page
    x:Class="NextPlayerUWP.Views.AlbumsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Template10.Controls"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    DataContext="{Binding Source={StaticResource Locator}, Path=AlbumsVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <CollectionViewSource x:Name="AlbumsCVS" Source="{Binding GroupedAlbums}" IsSourceGrouped="True"/>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNow" Text="Play now" 
                            Click="{x:Bind ViewModel.PlayNow}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                            Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                            Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                            Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIPin" Text="Pin" 
                            Click="{x:Bind ViewModel.Pin}" CommandParameter="{Binding}"/>
            <!--<MenuFlyoutItem x:Uid="MFIShare" Text="Share" 
                            Click="{x:Bind ViewModel.Share}" CommandParameter="{Binding}"/>-->
        </MenuFlyout>
        <Style x:Key="AlbumNameStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{ThemeResource ListItemForegroundSolid}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="WrapWholeWords"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="4,0,4,0"/>
            <Setter Property="MaxHeight" Value="44"/>
        </Style>
        <Style x:Key="AlbumArtistStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{ThemeResource ListItemForegroundLight}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="WrapWholeWords"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="4,0,4,4"/>
        </Style>
        <DataTemplate x:Key="AlbumItemTemplateDesktop" x:DataType="data:AlbumItem">
            <Grid RightTapped="ListViewItem_RightTapped"
                  PointerExited="Grid_PointerExited"
                  PointerEntered="Grid_PointerEntered"
                  Background="Transparent"
                  Width="140" Height="216">
                <Grid.RowDefinitions>
                    <RowDefinition Height="136"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--<Image 
                    Grid.Row="0"
                    MaxWidth="120"
                    Width="132"
                    Height="132"
                    x:Phase="1"
                    Opacity="0"
                    Margin="4"
                    ImageOpened="Image_ImageOpened"
                    mycontrols:ImageExtensions.DecodePixelType="Logical"
                    mycontrols:ImageExtensions.DecodePixelWidth="132" 
                    mycontrols:ImageExtensions.DecodePixelHeight="132"
                    mycontrols:ImageExtensions.DecodableUriSource="{x:Bind ImageUri}" 
                />-->
                <toolkit:DropShadowPanel 
                    BlurRadius="36.0"
                    ShadowOpacity="0.0"
                    OffsetY="8"
                    OffsetX="4"
                    Grid.Row="0">
                    <Image 
                        x:Name="AlbumImage"
                        Width="132" 
                        Height="132" 
                        Margin="4" 
                        Opacity="0" 
                        ImageOpened="Image_ImageOpened">
                        <Image.Source>
                            <BitmapImage UriSource="{x:Bind ImageUri}"
                                         DecodePixelType="Logical"
                                         DecodePixelHeight="132" 
                                         DecodePixelWidth="132"/>
                        </Image.Source>
                    </Image>
                </toolkit:DropShadowPanel>
                <TextBlock Grid.Row="1"
                    Text="{x:Bind Album}"
                    x:Phase="0"
                    Style="{StaticResource AlbumNameStyle}"
                    />
                <TextBlock Grid.Row="2"
                    Text="{x:Bind AlbumArtist}"
                    x:Phase="0"
                    Style="{StaticResource AlbumArtistStyle}"
                    />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="AlbumItemTemplate" x:DataType="data:AlbumItem">
            <Grid RightTapped="ListViewItem_RightTapped"
                  Background="Transparent"
                  Width="140" Height="216">
                <Grid.RowDefinitions>
                    <RowDefinition Height="136"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Image 
                    Grid.Row="0"
                    Width="132" 
                    Height="132" 
                    Margin="4" 
                    Opacity="0" 
                    ImageOpened="Image_ImageOpened">
                    <Image.Source>
                        <BitmapImage UriSource="{x:Bind ImageUri}"
                                        DecodePixelType="Logical"
                                        DecodePixelHeight="132" 
                                        DecodePixelWidth="132"/>
                    </Image.Source>
                </Image>
                <TextBlock Grid.Row="1"
                    Text="{x:Bind Album}"
                    x:Phase="0"
                    Style="{StaticResource AlbumNameStyle}"
                    />
                <TextBlock Grid.Row="2"
                    Text="{x:Bind AlbumArtist}"
                    x:Phase="0"
                    Style="{StaticResource AlbumArtistStyle}"
                    />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="GroupHeaderItemTemplate" x:DataType="data:GroupList">
            <TextBlock Text="{x:Bind Key}" 
                       Style="{StaticResource GroupHeaderTextBlockStyle}"/>
        </DataTemplate>
        <Style x:Key="GroupHeaderContainerStyle" TargetType="ListViewHeaderItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,12,4"/>
            <Setter Property="Padding" Value="0,8,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewHeaderItem">
                        <StackPanel Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                          Margin="{TemplateBinding Padding}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle Stroke="{ThemeResource UserAccentBrush}"
                   StrokeThickness="0.5"
                   Height="1"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Stretch"
                   Margin="0,8,0,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,8,4"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="200"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}"/>
            <Setter Property="FocusVisualPrimaryThickness" Value="2"/>
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}"/>
            <Setter Property="FocusVisualSecondaryThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter 
                            CheckBrush="{ThemeResource ListViewItemCheckBrush}" 
                            ContentMargin="{TemplateBinding Padding}" 
                            CheckMode="Overlay" 
                            ContentTransitions="{TemplateBinding ContentTransitions}" 
                            CheckBoxBrush="Transparent" 
                            DragForeground="{ThemeResource ListViewItemDragForeground}" 
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                            DragBackground="{ThemeResource ListViewItemDragBackground}" 
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                            FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}" 
                            FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}" 
                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" 
                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}" 
                            FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}" 
                            FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" 
                            FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Control.IsTemplateFocusTarget="True" 
                            PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" 
                            PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" 
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" 
                            PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" 
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                            SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" 
                            SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" 
                            SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" 
                            SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" 
                            SelectedBackground="{StaticResource UserAccentBrush}" 
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Column1.Width" Value="0"/>
                        <Setter Target="Column3Search.Width" Value="*"/>
                        <Setter Target="AlbumsListView.CanDragItems" Value="False"/>
                        <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplateMobile}"/>
                        <Setter Target="ZoomedOutListView.ItemContainerStyle" Value="{StaticResource ZoomedOutItemContainerStyleMobile}"/>
                        <Setter Target="ZoomedOutListView.ItemsPanel" Value="{StaticResource ZoomedOutItemsPanelTemplateMobile}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Column1.Width" Value="*"/>
                        <Setter Target="Column3Search.Width" Value="200"/>
                        <Setter Target="AlbumsListView.CanDragItems" Value="True"/>
                        <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplate}"/>
                        <Setter Target="ZoomedOutListView.ItemContainerStyle" Value="{StaticResource ZoomedOutItemContainerStyle}"/>
                        <Setter Target="ZoomedOutListView.ItemsPanel" Value="{StaticResource ZoomedOutItemsPanelTemplateDesktop}"/>
                        <Setter Target="AlbumsListView.ItemTemplate" Value="{StaticResource AlbumItemTemplateDesktop}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Xbox">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Xbox"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Column1.Width" Value="*"/>
                        <Setter Target="Column3Search.Width" Value="200"/>
                        <Setter Target="AlbumsListView.CanDragItems" Value="True"/>
                        <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplate}"/>
                        <Setter Target="ZoomedOutListView.ItemContainerStyle" Value="{StaticResource ZoomedOutItemContainerStyle}"/>
                        <Setter Target="ZoomedOutListView.ItemsPanel" Value="{StaticResource ZoomedOutItemsPanelTemplateDesktop}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <controls:PageHeader 
                Grid.Row="0"
                x:Name="PageHeader"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                x:Uid="PageHeaderAlbums"
                Content="Albums" 
                VisualStateNarrowMinWidth="0"
                VisualStateNormalMinWidth="720">
            <AppBarButton
                x:Uid="AppBarButtonSelect"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToInvertedVisibilityConverter}, Mode=OneWay}"
                Label="Select"
                Click="EnableMultipleSelection">
                <AppBarButton.Content>
                    <Viewbox Height="22">
                        <TextBlock Text="&#xE762;"  FontFamily="Segoe MDL2 Assets"/>
                    </Viewbox>
                </AppBarButton.Content>
            </AppBarButton>
            <AppBarButton
                x:Uid="AppBarButtonSelectAll"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Select all"
                Icon="SelectAll"
                Click="SelectAll"
                />
            <AppBarButton
                x:Uid="AppBarButtonClearSelection"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Clear selection"
                Icon="ClearSelection"
                Click="DisableMultipleSelection"/>
        </controls:PageHeader>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Gray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="Column1"/>
                    <ColumnDefinition x:Name="Column2Sort" Width="Auto"/>
                    <ColumnDefinition x:Name="Column3Search" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <AutoSuggestBox  
                    x:Name="SearchBox"
                    Grid.Column="2" 
                    PlaceholderText="search" 
                    QueryIcon="Find" 
                    Margin="4,0,12,0" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    DisplayMemberPath="Album"
                    TextMemberPath="Album"
                    TextChanged="{x:Bind ViewModel.AutoSuggestBox_TextChanged}"
                    QuerySubmitted="{x:Bind ViewModel.AutoSuggestBox_QuerySubmitted}"
                    SuggestionChosen="{x:Bind ViewModel.AutoSuggestBox_SuggestionChosen}"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <ComboBox Margin="4,0,8,0" 
                            BorderThickness="0" 
                            Width="Auto" 
                            VerticalAlignment="Center"
                            ItemsSource="{x:Bind ViewModel.ComboBoxItemValues}"
                            DisplayMemberPath="Label"
                            SelectedItem="{x:Bind ViewModel.SelectedComboBoxItem, Converter={StaticResource ComboBoxItemValueConverter}, Mode=TwoWay}"/>
                    <ToggleButton
                        x:Uid="ButtonPriority"
                        Style="{StaticResource SortingOrderButtonStyle}"
                        IsChecked="{x:Bind ViewModel.SortDescending, Mode=TwoWay}"
                        Click="{x:Bind ViewModel.ChangeSortingPriority}">
                        <ToggleButton.Content>
                            <SymbolIcon Symbol="Priority"/>
                        </ToggleButton.Content>
                    </ToggleButton>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <SemanticZoom>
                    <SemanticZoom.ZoomedInView>
                        <mycontrols:MyListView x:Name="AlbumsListView"
                            ItemsSource="{Binding Source={StaticResource AlbumsCVS}}"
                            ItemTemplate="{StaticResource AlbumItemTemplate}"
                            ItemContainerStyle="{StaticResource ListViewItemStyle1}"
                            SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}"
                            IsItemClickEnabled="{x:Bind ViewModel.IsClickEnabled, Mode=OneWay}"
                            ItemClick="{x:Bind ViewModel.ItemClicked }"
                            ShowsScrollingPlaceholders="False"
                            Margin="0,0,0,0"
                            Padding="12,0,0,0"
                            CanDragItems="True"
                            DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                            <mycontrols:MyListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsWrapGrid Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </mycontrols:MyListView.ItemsPanel>
                            <mycontrols:MyListView.GroupStyle>
                                <GroupStyle HeaderTemplate="{StaticResource GroupHeaderItemTemplate}" 
                                            HeaderContainerStyle="{StaticResource GroupHeaderContainerStyle}"/>
                            </mycontrols:MyListView.GroupStyle>
                        </mycontrols:MyListView>
                    </SemanticZoom.ZoomedInView>
                    <SemanticZoom.ZoomedOutView>
                        <ListView
                            x:Name="ZoomedOutListView"
                            ItemsSource="{Binding Source={StaticResource AlbumsCVS}, Path=CollectionGroups}">
                        </ListView>
                    </SemanticZoom.ZoomedOutView>
                </SemanticZoom>
            </Grid>
        </Grid>
    </Grid>
</Page>
