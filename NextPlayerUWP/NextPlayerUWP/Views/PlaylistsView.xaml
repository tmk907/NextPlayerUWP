<Page
    x:Class="NextPlayerUWP.Views.PlaylistsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkitcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=PlaylistsVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNow" Text="Play now" 
                            Click="{x:Bind ViewModel.PlayNow}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                            Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                            Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIEditSmart" Text="Edit"
                            Visibility="{Binding IsSmartAndNotDefault, Converter={StaticResource BoolToVisibilityConverter}}"
                            Click="{x:Bind ViewModel.EditSmartPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIEditName" Text="Edit name"
                            Visibility="{Binding IsSmart, Converter={StaticResource BoolToInvertedVisibilityConverter}}"
                            Click="MFIEditName_Click" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIExport" Text="Export" 
                            Click="MFIExportChoosePathKind" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIShowDetails" Text="Show details"
                            Visibility="{Binding IsSmart, Converter={StaticResource BoolToInvertedVisibilityConverter}}"
                            Click="MenuFlyoutItemShowDetails_Click" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIHide" Text="Hide"
                            Visibility="{Binding IsHidden, Converter={StaticResource BoolToInvertedVisibilityConverter}}"
                            Click="{x:Bind ViewModel.HidePlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIShow" Text="Show"
                            Visibility="{Binding IsHidden, Converter={StaticResource BoolToVisibilityConverter}}"
                            Click="{x:Bind ViewModel.ShowPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIDelete" Text="Delete" 
                            Visibility="{Binding IsNotDefault, Converter={StaticResource BoolToVisibilityConverter}}"
                            Click="MenuFlyoutItemDelete_Click" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIPin" Text="Pin" 
                            Click="{x:Bind ViewModel.Pin}" CommandParameter="{Binding}"/>
        </MenuFlyout>
        <DataTemplate x:Key="PlaylistItemTemplateMobile" x:DataType="data:PlaylistItem">
          <toolkitcontrols:SlidableListItem
                LeftIcon="{ThemeResource SlideableListItemLeftIcon}" 
	            LeftLabel="{ThemeResource SlideableListItemLeftLabel}"
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <SymbolIcon Grid.Column="0"
                            Symbol="Tag"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Width="40"
                            Height="40"
                            Margin="0"
                            Visibility="{x:Bind IsHidden, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
                    <TextBlock Grid.Column="1"
                           Text="{x:Bind Name, Mode=OneWay}"
                           VerticalAlignment="Center"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="PlaylistItemTemplateDesktop" x:DataType="data:PlaylistItem">
            <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <SymbolIcon Grid.Column="0"
                            Symbol="Tag"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Width="40"
                            Height="40"
                            Margin="0"
                            Visibility="{x:Bind IsHidden, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
                <TextBlock Grid.Column="1"
                        Text="{x:Bind Name, Mode=OneWay}"
                        VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="FilterButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Custom style for Windows.UI.Xaml.Controls.ContentDialog -->
        <!-- Gives it a transparent background and adds a BackDrop -->
        <Style x:Key="ContentDialogStyle" TargetType="ContentDialog">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="MaxHeight" Value="{ThemeResource ContentDialogMaxHeight}" />
            <Setter Property="MinHeight" Value="{ThemeResource ContentDialogMinHeight}" />
            <Setter Property="MaxWidth" Value="{ThemeResource ContentDialogMaxWidth}" />
            <Setter Property="MinWidth" Value="{ThemeResource ContentDialogMinWidth}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentDialog">
                        <Border x:Name="Container">
                            <Grid x:Name="LayoutRoot">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <mycontrols:BackDrop BlurAmount="15"
                                                   TintColor="BurlyWood" />
                                <Border x:Name="BackgroundElement"
                                        Background="{TemplateBinding Background}"
                                        FlowDirection="{TemplateBinding FlowDirection}"
                                        BorderThickness="{ThemeResource ContentDialogBorderWidth}"
                                        BorderBrush="{ThemeResource SystemControlForegroundAccentBrush}"
                                        MaxWidth="{TemplateBinding MaxWidth}"
                                        MaxHeight="{TemplateBinding MaxHeight}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        MinHeight="{TemplateBinding MinHeight}">
                                    <Grid x:Name="DialogSpace"
                                          VerticalAlignment="Stretch"
                                          Padding="0 20">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="ContentScrollViewer"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      VerticalScrollBarVisibility="Disabled"
                                                      ZoomMode="Disabled"
                                                      Margin="{ThemeResource ContentDialogContentScrollViewerMargin}"
                                                      IsTabStop="False">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ContentControl x:Name="Title"
                                                                Margin="{ThemeResource ContentDialogTitleMargin}"
                                                                Content="{TemplateBinding Title}"
                                                                ContentTemplate="{TemplateBinding TitleTemplate}"
                                                                FontSize="20"
                                                                FontFamily="XamlAutoFontFamily"
                                                                FontWeight="Normal"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top"
                                                                IsTabStop="False"
                                                                MaxHeight="{ThemeResource ContentDialogTitleMaxHeight}">
                                                    <ContentControl.Template>
                                                        <ControlTemplate TargetType="ContentControl">
                                                            <ContentPresenter Content="{TemplateBinding Content}"
                                                                              MaxLines="2"
                                                                              TextWrapping="Wrap"
                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                        </ControlTemplate>
                                                    </ContentControl.Template>
                                                </ContentControl>
                                                <ContentPresenter x:Name="Content"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Content="{TemplateBinding Content}"
                                                                  FontSize="{ThemeResource ControlContentThemeFontSize}"
                                                                  FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                                                  Margin="{ThemeResource ContentDialogContentMargin}"
                                                                  Foreground="{TemplateBinding Foreground}"
                                                                  Grid.Row="1"
                                                                  TextWrapping="Wrap" />
                                            </Grid>
                                        </ScrollViewer>
                                        <Grid x:Name="CommandSpace"
                                              Grid.Row="1"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Bottom">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Button1Host"
                                                    Margin="{ThemeResource ContentDialogButton1HostMargin}"
                                                    MinWidth="{ThemeResource ContentDialogButtonMinWidth}"
                                                    MaxWidth="{ThemeResource ContentDialogButtonMaxWidth}"
                                                    Height="{ThemeResource ContentDialogButtonHeight}"
                                                    HorizontalAlignment="Stretch" />
                                            <Border x:Name="Button2Host"
                                                    Margin="{ThemeResource ContentDialogButton2HostMargin}"
                                                    MinWidth="{ThemeResource ContentDialogButtonMinWidth}"
                                                    MaxWidth="{ThemeResource ContentDialogButtonMaxWidth}"
                                                    Height="{ThemeResource ContentDialogButtonHeight}"
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Stretch" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlaylistsListView.ItemTemplate" Value="{StaticResource PlaylistItemTemplateMobile}"/>
                        <Setter Target="PlaylistsListView.CanDragItems" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlaylistsListView.ItemTemplate" Value="{StaticResource PlaylistItemTemplateDesktop}"/>
                        <Setter Target="PlaylistsListView.CanDragItems" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Xbox">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Xbox"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlaylistsListView.ItemTemplate" Value="{StaticResource PlaylistItemTemplateDesktop}"/>
                        <Setter Target="PlaylistsListView.CanDragItems" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <controls:PageHeader 
            Grid.Row="0" 
            Grid.ColumnSpan="2"
            x:Name="PageHeader"
			BackButtonVisibility="Collapsed" 
			Frame="{x:Bind Frame, Mode=OneWay}"
			Content="Playlists"
			x:Uid="PageHeaderPlaylists"
			VisualStateNarrowMinWidth="0"
			VisualStateNormalMinWidth="720">
            <AppBarButton 
                    x:Uid="AppBarButtonFilter"
                    Label="Filter"
                    Icon="Filter">
                <AppBarButton.Flyout>
                    <Flyout>
                        <ListView
                                ItemsSource="{x:Bind ViewModel.Filters, Mode=OneWay}"
                                SelectionMode="None"
                                >
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="data:PlaylistFilterElement">
                                    <Grid Background="Transparent" Tapped="{x:Bind Clicked}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      MinWidth="32"
                                                      IsChecked="{x:Bind IsChecked, Mode=OneWay}"/>
                                        <TextBlock Grid.Column="1"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       Text="{x:Bind Name}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton 
                Icon="Add"
                x:Uid="AppBarButtonAddPlaylist"
                Label="Add playlist"
                Click="newPlainPlaylist_Click"/>
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton 
                    x:Uid="AppBarButtonNewSmartPlaylist"
                    Label="New smart"
                    Click="{x:Bind ViewModel.NewSmartPlaylist}"/>
            </controls:PageHeader.SecondaryCommands>
        </controls:PageHeader>
        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition/>
                <!--<RowDefinition Height="Auto"/>-->
            </Grid.RowDefinitions>
            <ContentDialog x:Name="ContentDialogNewPlaylist"
                Grid.Row="1"
                x:Uid="ContentDialogNewPlaylist"
                VerticalAlignment="Center"
                Title="New playlist"
                PrimaryButtonText="Save"
                IsPrimaryButtonEnabled="{Binding Text, ElementName=playlistNameTB, Converter={StaticResource PlaylistNameToBoolConverter}, Mode=OneWay}"
                PrimaryButtonClick="ContentDialogNewPlaylist_PrimaryButtonClick"
                SecondaryButtonText="Cancel"
                VerticalContentAlignment="Stretch"
                MaxWidth="300">
                <ContentDialog.Content>
                    <StackPanel Orientation="Vertical">
                        <TextBlock x:Uid="TBPlaylistName"
                            Margin="0,4,4,4"
                            Text="Playlist name:"/>
                        <TextBox x:Name="playlistNameTB"
                            Margin="0,4,4,0"
                            Text="{x:Bind ViewModel.Name, Mode=TwoWay}"/>
                    </StackPanel>
                </ContentDialog.Content>
            </ContentDialog>
            <ContentDialog x:Name="ContentDialogEditName"
                Grid.Row="1"
                x:Uid="ContentDialogEditName"
                VerticalAlignment="Center"
                Title="Edit name"
                PrimaryButtonText="Save"
                IsPrimaryButtonEnabled="{Binding Text, ElementName=editplaylistNameTB, Converter={StaticResource PlaylistNameToBoolConverter}, Mode=OneWay}"
                PrimaryButtonClick="ContentDialogEditName_PrimaryButtonClick"
                SecondaryButtonText="Cancel"
                VerticalContentAlignment="Stretch"
                MaxWidth="300">
                <ContentDialog.Content>
                    <StackPanel Orientation="Vertical">
                        <TextBlock x:Uid="TBPlaylistNewName"
                            Margin="0,4,4,4"
                            Text="New name:"/>
                        <TextBox x:Name="editplaylistNameTB"
                            Margin="0,4,4,0"
                            Text="{x:Bind ViewModel.NewPlaylistName, Mode=TwoWay}"/>
                    </StackPanel>
                </ContentDialog.Content>
            </ContentDialog>
            <ContentDialog x:Name="ContentDialogShowDetails"
                  Grid.Row="1"
                  x:Uid="ContentDialogShowDetails"
                  VerticalAlignment="Center"
                  Title="Details"
                  PrimaryButtonText="OK"
                  VerticalContentAlignment="Stretch">
              <ContentDialog.Content>
                <StackPanel Orientation="Vertical">
                  <TextBlock 
                      Margin="0,4,4,4"
                      Text="Path"/>
                  <TextBlock 
                      Margin="0,4,4,0"
                      Text="{x:Bind ViewModel.EditPlaylist.Path, Mode=OneWay}"
                      TextWrapping="Wrap"/>
                        <Button Content="Open folder" Click="{x:Bind ViewModel.OpenFolder}"/>
                    </StackPanel>
              </ContentDialog.Content>
            </ContentDialog>
            <ContentDialog x:Name="ContentDialogChoosePathKind"
                Grid.Row="1"
                x:Uid="ContentDialogChoosePathKind"
                VerticalAlignment="Center"
                Title="Save playlist"
                PrimaryButtonText="Save"
                PrimaryButtonClick="{x:Bind ViewModel.ExportPlaylist}"
                SecondaryButtonText="Cancel"
                VerticalContentAlignment="Stretch"
                MaxWidth="300">
                <ContentDialog.Content>
                    <StackPanel Orientation="Vertical">
                        <TextBlock x:Uid="TBChoosePathKind"
                            Margin="0,4,4,4"
                            Text="Song path"/>
                        <RadioButton x:Uid="RBAbsolute"
                                     GroupName="pathskind"
                                     Content="Absolute"
                                     IsChecked="{x:Bind ViewModel.RelativePaths, Converter={StaticResource InverseBooleanConverter}, Mode=TwoWay}"/>
                        <RadioButton x:Uid="RBRelative"
                                 GroupName="pathskind"
                                 Content="Relative"
                                 IsChecked="{x:Bind ViewModel.RelativePaths, Converter={StaticResource BoolToNullableBoolConverter}, Mode=TwoWay}"/>
                    </StackPanel>
                </ContentDialog.Content>
            </ContentDialog>
            <Grid Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Gray">
              <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="Column1"/>
                  <ColumnDefinition x:Name="Column2" Width="Auto"/>
                  <ColumnDefinition x:Name="Column3Search" Width="Auto"/>
                </Grid.ColumnDefinitions>
              <AutoSuggestBox  
                    x:Name="SearchBox"
                    Grid.Column="2" 
                    PlaceholderText="search" 
                    QueryIcon="Find" 
                    Margin="4,0,12,0"
                    MinWidth="192"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    DisplayMemberPath="Name"
                    TextMemberPath="Name"
                    TextChanged="{x:Bind ViewModel.AutoSuggestBox_TextChanged}"
                    QuerySubmitted="{x:Bind ViewModel.AutoSuggestBox_QuerySubmitted}"
                    SuggestionChosen="{x:Bind ViewModel.AutoSuggestBox_SuggestionChosen}"/>
            </Grid>
            <mycontrols:AlternatingRowListView 
                x:Name="PlaylistsListView"
                Grid.Row="1"
                EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                ItemsSource="{x:Bind ViewModel.Playlists, Mode=OneWay}"
                SelectionMode="None"
                IsItemClickEnabled="True"
                ItemClick="{x:Bind ViewModel.ItemClicked}"
                Margin="12,4,0,4"
                ItemContainerStyle="{StaticResource ListViewItemContainerStyle4}"
                CanDragItems="True"
                DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                <mycontrols:AlternatingRowListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </mycontrols:AlternatingRowListView.ItemsPanel>
            </mycontrols:AlternatingRowListView>
            <!--<adduplex:AdControl
                x:Name="AdDuplexAdControl"
                Grid.Row="2"
                x:DeferLoadStrategy="Lazy"
                Visibility="Collapsed"
                AdUnitId="202211" 
                AppKey="bfe9d689-7cf7-4add-84fe-444dc72e6f36" />-->
        </Grid>
    </Grid>
</Page>
