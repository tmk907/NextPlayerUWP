<Page
    x:Class="NextPlayerUWP.Views.AlbumArtistView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkitcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=AlbumArtistVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <CollectionViewSource x:Name="AlbumsCVS" Source="{Binding Albums}" IsSourceGrouped="True"/>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNow" Text="Play now" 
                        Click="{x:Bind ViewModel.PlayNow}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                        Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                        Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                        Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIGoToAlbum" Text="Go To Album" 
                        Click="{x:Bind ViewModel.GoToAlbum}" CommandParameter="{Binding}" />
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIShowDetails" Text="Show details" 
                        Click="{x:Bind ViewModel.ShowDetails}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIEditTags" Text="Edit" 
                        Click="{x:Bind ViewModel.EditTags}" CommandParameter="{Binding}"/>
            <!--<MenuFlyoutItem x:Uid="MFIShare" Text="Share" 
                        Click="{x:Bind ViewModel.Share}" CommandParameter="{Binding}"/>-->
        </MenuFlyout>
        <MenuFlyout x:Key="AlbumContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNow" Text="Play now"
                        Click="{x:Bind ViewModel.PlayNowAlbum}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next"
                        Click="{x:Bind ViewModel.PlayNextAlbum}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing"
                        Click="{x:Bind ViewModel.AddToNowPlayingAlbum}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist"
                        Click="{x:Bind ViewModel.AddToPlaylistAlbum}" CommandParameter="{Binding}"/>
        </MenuFlyout>
        <Style x:Key="ArtistDescriptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="GroupHeaderContainerStyle" TargetType="ListViewHeaderItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,12,4"/>
            <Setter Property="Padding" Value="0,8,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewHeaderItem">
                        <StackPanel Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle Stroke="{ThemeResource UserAccentBrush}"
                                StrokeThickness="0.5"
                                Height="1"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Stretch"
                                Margin="0,8,0,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="GroupHeaderTemplate">
            <Grid Margin="0,0,0,4" 
                    RightTapped="AlbumGroupHeader_RightTapped" 
                    Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Image Grid.Column="0" Grid.RowSpan="2"
                        ImageOpened="AlbumCoverImage_ImageOpened">
                    <Image.Source>
                        <BitmapImage UriSource="{Binding Header.ImageUri, Mode=OneWay}"
                                     DecodePixelType="Logical"
                                     DecodePixelHeight="100" DecodePixelWidth="100"/>
                    </Image.Source>
                </Image>
                <TextBlock Grid.Column="1" Grid.Row="0"
                        Text="{Binding Header.Album}"
                        Style="{StaticResource SubheaderTextBlockStyle}"
                        TextTrimming="CharacterEllipsis"
                        FontSize="23"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"/>
                <Grid Grid.Column="1" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                        Text="{Binding Header.AlbumArtist}"
                        Style="{StaticResource TitleTextBlockStyle}"
                        FontSize="18"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="2"
                            Text="{Binding Header.Year}"
                            Visibility="{Binding Header.Year, Converter={StaticResource YearToVisibilityConverter}}"
                            Style="{StaticResource TitleTextBlockStyle}"
                            Margin="8,0,0,0"
                            FontSize="18"
                            VerticalAlignment="Center"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ArtistSongItemTemplateDesktop" x:DataType="data:SongItem">
            <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                        Text="{x:Bind TrackNumber}"
                        Style="{StaticResource SongItemStyleIndex}"/>
                <TextBlock Grid.Column="1"
                        Text="{x:Bind Title}"
                        Style="{StaticResource SongItemStyleLeft}"/>
                <TextBlock Grid.Column="2"
                        Text="{x:Bind Artist}"
                        Style="{StaticResource SongItemStyleCenter}"/>
                <TextBlock Grid.Column="3"
                        Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                        Style="{StaticResource SongItemStyleRight}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ArtistSongItemTemplateMobile" x:DataType="data:SongItem">
            <toolkitcontrols:SlidableListItem
                    LeftIcon="{ThemeResource SlideableListItemLeftIcon}"
	                LeftLabel="{ThemeResource SlideableListItemLeftLabel}"
	                LeftBackground="{StaticResource UserAccentBrush}" 
	                LeftForeground="White" 
	                ActivationWidth="100"
                    Background="Transparent"
	                LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                    IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.RowSpan="2"
                            Text="{x:Bind TrackNumber}"
                            Style="{StaticResource SongItemStyleIndex}"/>
                    <TextBlock Grid.Column="1" Grid.Row="0"
                            Text="{x:Bind Title}"
                            Style="{StaticResource SongItemStyleTop}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1"
                            Text="{x:Bind Artist}"
                            Style="{StaticResource SongItemStyleBottom}"/>
                    <TextBlock Grid.Column="2" Grid.RowSpan="2"
                            Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                            Style="{StaticResource SongItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="ArtistSongItemTemplateMobileWide" x:DataType="data:SongItem">
            <toolkitcontrols:SlidableListItem
                    LeftIcon="{ThemeResource SlideableListItemLeftIcon}"
	                LeftLabel="{ThemeResource SlideableListItemLeftLabel}"
	                LeftBackground="{StaticResource UserAccentBrush}" 
	                LeftForeground="White" 
	                ActivationWidth="100"
                    Background="Transparent"
	                LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                    IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                            Text="{x:Bind TrackNumber}"
                            Style="{StaticResource SongItemStyleIndex}"/>
                    <TextBlock Grid.Column="1"
                            Text="{x:Bind Title}"
                            Style="{StaticResource SongItemStyleLeft}"/>
                    <TextBlock Grid.Column="2"
                            Text="{x:Bind Artist}"
                            Style="{StaticResource SongItemStyleCenter}"/>
                    <TextBlock Grid.Column="3"
                            Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                            Style="{StaticResource SongItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="MobileWide">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="480"/>
                            <triggers:OrientationStateTrigger Orientation="Portrait"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumArtistSongsListView.ItemTemplate" Value="{StaticResource ArtistSongItemTemplateMobileWide}"/>
                        <Setter Target="AlbumArtistSongsListView.CanDragItems" Value="False"/>
                        <Setter Target="PortraitView.Visibility" Value="Visible"/>
                        <Setter Target="MobileLandscapeView.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileNarrow">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="0"/>
                            <triggers:OrientationStateTrigger Orientation="Portrait"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumArtistSongsListView.ItemTemplate" Value="{StaticResource ArtistSongItemTemplateMobile}"/>
                        <Setter Target="AlbumArtistSongsListView.CanDragItems" Value="False"/>
                        <Setter Target="PortraitView.Visibility" Value="Visible"/>
                        <Setter Target="MobileLandscapeView.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileLandscape">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:OrientationStateTrigger Orientation="Landscape"/>
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MobileLandscapeView.Visibility" Value="Visible"/>
                        <Setter Target="PortraitView.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumArtistSongsListView.ItemTemplate" Value="{StaticResource ArtistSongItemTemplateDesktop}"/>
                        <Setter Target="PortraitView.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Xbox">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Xbox"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumArtistSongsListView.ItemTemplate" Value="{StaticResource ArtistSongItemTemplateDesktop}"/>
                        <Setter Target="PortraitView.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <controls:PageHeader Grid.Row="0" Grid.ColumnSpan="2"
            BackButtonVisibility="Collapsed" 
            Frame="{x:Bind Frame, Mode=OneWay}"
            x:Uid="PageHeaderAlbumArtist"
            Content="Album Artist"
            VisualStateNarrowMinWidth="0" 
            VisualStateNormalMinWidth="720">
            <AppBarButton
                x:Uid="AppBarButtonShuffleAll"
                x:Name="ShuffleAppBarButton"
                Label="Shuffle all"
                Icon="Shuffle"/>
            <AppBarSeparator/>
            <AppBarButton
                x:Uid="AppBarButtonSelect"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToInvertedVisibilityConverter}, Mode=OneWay}"
                Label="Select"
                Click="{x:Bind ViewModel.EnableMultipleSelection}">
                <AppBarButton.Content>
                    <Viewbox Height="22">
                        <TextBlock Text="&#xE762;"  FontFamily="Segoe MDL2 Assets"/>
                    </Viewbox>
                </AppBarButton.Content>
            </AppBarButton>
            <AppBarButton
                x:Uid="AppBarButtonSelectAll"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Select all"
                Icon="SelectAll"
                Click="SelectAll"
                />
            <AppBarButton
                x:Uid="AppBarButtonClearSelection"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Clear selection"
                Icon="ClearSelection"
                Click="{x:Bind ViewModel.DisableMultipleSelection}"/>
            <AppBarSeparator Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
            <AppBarButton
                x:Uid="AppBarButtonPlayNow"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Play"
                Icon="Play"
                Click="PlayNowMultiple"/>
            <AppBarButton
                x:Uid="AppBarButtonPlayNext"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Play next"
                Icon="Next"
                Click="PlayNextMultiple"/>
            <AppBarButton
                x:Uid="AppBarButtonAddToNowPlaying"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Add to queueu"
                Icon="Add"
                Click="AddToNowPlayingMultiple"/>
            <AppBarButton
                x:Uid="AppBarButtonAddToPlaylist"
                Visibility="{x:Bind ViewModel.IsMultiSelection, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                Label="Add to playlist"
                Icon="Add"
                Click="AddToPlaylistMultiple"/>
        </controls:PageHeader>
        <Grid Grid.Row="1" Grid.Column="0"
            x:Name="PortraitView">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0"
                Text="{x:Bind ViewModel.AlbumArtist.DisplayAlbumArtist}"
                Style="{StaticResource ArtistDescriptionTextBlockStyle}"
                Margin="12,12,12,12"/>
            <mycontrols:AlternatingRowListView
                    x:Name="AlbumArtistSongsListView"
                    Grid.Row="1"
                    EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                    OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                    ItemsSource="{Binding Source={StaticResource AlbumsCVS}}"
                    ItemTemplate="{StaticResource ArtistSongItemTemplateDesktop}"
                    ItemContainerStyle="{StaticResource ListViewItemContainerStyle2}"
                    SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}"
                    IsItemClickEnabled="{x:Bind ViewModel.IsClickEnabled, Mode=OneWay}"
                    ItemClick="{x:Bind ViewModel.ItemClicked }"
                    Margin="12,0,0,0"
                    CanDragItems="True"
                    DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                <mycontrols:AlternatingRowListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </mycontrols:AlternatingRowListView.ItemsPanel>
                <mycontrols:AlternatingRowListView.GroupStyle>
                    <GroupStyle 
                        HeaderTemplate="{StaticResource GroupHeaderTemplate}"
                        HeaderContainerStyle="{StaticResource GroupHeaderContainerStyle}"/>
                </mycontrols:AlternatingRowListView.GroupStyle>
            </mycontrols:AlternatingRowListView>
        </Grid>
        <ScrollViewer 
            Grid.Row="1" Grid.Column="0"
            x:Name="MobileLandscapeView"
            x:DeferLoadStrategy="Lazy" 
            Visibility="Collapsed"
            ScrollViewer.VerticalScrollMode="Enabled" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                    Text="{Binding AlbumArtist.DisplayAlbumArtist}"
                    Style="{StaticResource ArtistDescriptionTextBlockStyle}"
                    Margin="12,12,12,12"/>
                <mycontrols:AlternatingRowListView 
                    Grid.Row="1"
                    EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                    OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                    ItemsSource="{Binding Source={StaticResource AlbumsCVS}}"
                    ItemTemplate="{StaticResource ArtistSongItemTemplateMobileWide}"
                    ItemContainerStyle="{StaticResource ListViewItemContainerStyle2}"
                    SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}"
                    IsItemClickEnabled="{x:Bind ViewModel.IsClickEnabled, Mode=OneWay}"
                    ItemClick="{x:Bind ViewModel.ItemClicked }"
                    Margin="12,0,0,0"
                    CanDragItems="False"
                    ScrollViewer.VerticalScrollMode="Disabled">
                    <mycontrols:AlternatingRowListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </mycontrols:AlternatingRowListView.ItemsPanel>
                    <mycontrols:AlternatingRowListView.GroupStyle>
                        <GroupStyle 
                            HeaderTemplate="{StaticResource GroupHeaderTemplate}"
                            HeaderContainerStyle="{StaticResource GroupHeaderContainerStyle}"/>
                    </mycontrols:AlternatingRowListView.GroupStyle>
                </mycontrols:AlternatingRowListView>
            </Grid>
        </ScrollViewer>
    </Grid>
</Page>
