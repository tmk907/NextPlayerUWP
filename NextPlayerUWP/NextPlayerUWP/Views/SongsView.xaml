<Page
    x:Class="NextPlayerUWP.Views.SongsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=SongsVM}"
    mc:Ignorable="d">

    <Page.Resources>
        <CollectionViewSource x:Name="SongsCVS" Source="{Binding GroupedSongs}" IsSourceGrouped="True"/>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                            Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                            Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                            Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIShowDetails" Text="Show details" 
                            Click="{x:Bind ViewModel.ShowDetails}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIEditTags" Text="Edit" 
                            Click="{x:Bind ViewModel.EditTags}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIShare" Text="Share" 
                            Click="{x:Bind ViewModel.Share}" CommandParameter="{Binding}"/>
        </MenuFlyout>
        <DataTemplate x:Key="SongsListViewItemTemplate" x:DataType="data:SongItem">
            <Grid RightTapped="ListViewItem_RightTapped"
                  Background="{x:Bind Index, Converter={StaticResource BackgroundConverter}}"
                  >
                <!--Background="{x:Bind Index, Converter={StaticResource BackgroundConverter}}"-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="6*"/>

                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" 
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyle1}"/>
                <TextBlock Grid.Column="1" 
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyle2}"/>
                <TextBlock Grid.Column="2" 
                    Text="{x:Bind Album}"
                    Style="{StaticResource SongItemStyle2}"/>
                <TextBlock Grid.Column="3" 
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyle2}"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="SongItemStyle1" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="SongItemStyle2" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <controls:PageHeader Grid.Row="0"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                Content="Songs"
                x:Uid="PageHeaderSongs"
                VisualStateNarrowMinWidth="0"
                VisualStateNormalMinWidth="720"/>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="44"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ComboBox Grid.Row="0" SelectionChanged="{x:Bind ViewModel.SortItems}">
                <x:String>Title</x:String>
                <x:String>Album</x:String>
                <x:String>Artist</x:String>
            </ComboBox>
            <SemanticZoom Grid.Row="1">
            <SemanticZoom.ZoomedInView>
                <ListView x:Name="SongsListView"
                        ItemsSource="{Binding Source={StaticResource SongsCVS}}"
                        ItemTemplate="{StaticResource SongsListViewItemTemplate}"
                        SelectionMode="None"
                        IsItemClickEnabled="True"
                        Margin="8,8,8,4"
                        ItemClick="{x:Bind ViewModel.ItemClicked }"
                        >
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                
                                <!--<Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ListViewItemPresenter
                                            PointerOverBackground="#ffdbdbdb"
                                        />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>-->
                            
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.GroupStyle>
                        <GroupStyle >
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="data:GroupList">
                                    <TextBlock Text="{x:Bind Key}" 
                                        Style="{StaticResource GroupHeaderTextBlockStyle}"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <ListView
                        ItemsSource="{Binding Source={StaticResource SongsCVS}, Path=CollectionGroups}"
                        ItemTemplate="{StaticResource ZoomedOutItemsTemplate}"
                    >
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Height" Value="84" />
                            <Setter Property="Width" Value="84" />
                            <Setter Property="Margin" Value="4"/>
                            <Setter Property="Padding" Value="0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
        </Grid>
    </Grid>
</Page>
