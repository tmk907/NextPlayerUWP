<Page
    x:Class="NextPlayerUWP.Views.SongsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkitcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=SongsVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <CollectionViewSource x:Name="SongsCVS" Source="{Binding GroupedSongs}" IsSourceGrouped="True"/>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlay" Text="Play" 
                            Click="{x:Bind ViewModel.PlayNow}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                            Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                            Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                            Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIGoToArtist" Text="Go To Artist" 
                            Click="{x:Bind ViewModel.GoToArtist}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIGoToAlbum" Text="Go To Album" 
                            Click="{x:Bind ViewModel.GoToAlbum}" CommandParameter="{Binding}" />
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIShowDetails" Text="Show details" 
                            Click="{x:Bind ViewModel.ShowDetails}" CommandParameter="{Binding}" />
            <MenuFlyoutItem x:Uid="MFIEditTags" Text="Edit" 
                            Click="{x:Bind ViewModel.EditTags}" CommandParameter="{Binding}"/>
            <!--<MenuFlyoutItem x:Uid="MFIShare" Text="Share" 
                            Click="{x:Bind ViewModel.Share}" CommandParameter="{Binding}"/>-->
        </MenuFlyout>
        
        <Style x:Key="EmptyContentControlStyle" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl" />
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="SongsListViewItemTemplateDesktop" x:DataType="data:SongItem">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" 
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleLeft}"/>
                    <TextBlock Grid.Column="1" 
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleCenter}"/>
                    <TextBlock Grid.Column="2" 
                    Text="{x:Bind Album}"
                    Style="{StaticResource SongItemStyleCenter}"/>
                    <TextBlock Grid.Column="3" 
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
                </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SongsListViewItemTemplateMobile" x:DataType="data:SongItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="Add" 
	            LeftLabel="Queue" 
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleTop}"/>
                    <TextBlock Grid.Column="0" Grid.Row="1"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleBottom}"/>
                    <TextBlock Grid.Column="1" Grid.RowSpan="2"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="SongsListViewItemTemplateMobileWide" x:DataType="data:SongItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="Add" 
	            LeftLabel="Queue" 
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0"
                    Text="{x:Bind Title}"
                    Style="{StaticResource SongItemStyleTop}"/>
                    <TextBlock Grid.Column="0" Grid.Row="1"
                    Text="{x:Bind Artist}"
                    Style="{StaticResource SongItemStyleBottom}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1"
                    Text="{x:Bind Album}"
                    Style="{StaticResource SongItemStyleBottom}"/>
                    <TextBlock Grid.Column="2" Grid.RowSpan="2"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource SongItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="ZoomedOutItemsTemplate1">
            <Border  Width="{Binding Group.Header, Converter={StaticResource ZoomedOutItemWidthConverter}}"
                     Height="84"
                     BorderThickness="1" 
                     BorderBrush="LightGray" 
                     Background="Transparent">
                <TextBlock Text="{Binding Group.Key}"
                           FontSize="32"
                           FontWeight="Normal"
                           Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="GroupHeaderItemTemplate" x:DataType="data:GroupList">
            <TextBlock Text="{x:Bind Key}" 
                       Style="{StaticResource GroupHeaderTextBlockStyle}"/>
        </DataTemplate>
        <Style x:Key="GroupHeaderContainerStyle" TargetType="ListViewHeaderItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,12,4"/>
            <Setter Property="Padding" Value="0,8,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewHeaderItem">
                        <StackPanel Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                          Margin="{TemplateBinding Padding}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle Stroke="{ThemeResource UserAccentBrush}"
                   StrokeThickness="0.5"
                   Height="1"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Stretch"
                   Margin="0,8,0,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid x:Name="ContentGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="MobileWide">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="480"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongsListView.ItemTemplate" Value="{StaticResource SongsListViewItemTemplateMobileWide}"/>
                        <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplateMobile}"/>
                        <Setter Target="Column1.Width" Value="0"/>
                        <Setter Target="Column3Search.Width" Value="*"/>
                        <Setter Target="SongsListView.CanDragItems" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileNarrow">
                    <VisualState.StateTriggers>
                        <triggers:CompositeStateTrigger Operator="And">
                            <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                            <triggers:AdaptiveTrigger MinWindowWidth="0"/>
                        </triggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongsListView.ItemTemplate" Value="{StaticResource SongsListViewItemTemplateMobile}"/>
                        <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplateMobile}"/>
                        <Setter Target="Column1.Width" Value="0"/>
                        <Setter Target="Column3Search.Width" Value="*"/>
                        <Setter Target="SongsListView.CanDragItems" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongsListView.ItemTemplate" Value="{StaticResource SongsListViewItemTemplateDesktop}"/>
                        <Setter Target="ZoomedOutListView.ItemTemplate" Value="{StaticResource ZoomedOutItemsTemplate}"/>
                        <Setter Target="Column1.Width" Value="*"/>
                        <Setter Target="Column3Search.Width" Value="200"/>
                        <Setter Target="SongsListView.CanDragItems" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <controls:PageHeader Grid.Row="0" Grid.ColumnSpan="2"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                Content="Songs"
                x:Uid="PageHeaderSongs"
                VisualStateNarrowMinWidth="0"
                VisualStateNormalMinWidth="720">
            <AppBarButton
                x:Uid="AppBarButtonShuffleAll"
                Label="Shuffle all"
                Icon="Shuffle"
                Click="{x:Bind ViewModel.ShuffleAllSongs}"/>
        </controls:PageHeader>
        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Gray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="Column1"/>
                    <ColumnDefinition x:Name="Column2Sort" Width="Auto"/>
                    <ColumnDefinition x:Name="Column3Search" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <AutoSuggestBox  Grid.Column="2" 
                    PlaceholderText="search" 
                    QueryIcon="Find" 
                    Margin="4,0,12,0" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    TextChanged="{x:Bind ViewModel.AutoSuggestBox_TextChanged}"
                    QuerySubmitted="{x:Bind ViewModel.AutoSuggestBox_QuerySubmitted}"
                    SuggestionChosen="{x:Bind ViewModel.AutoSuggestBox_SuggestionChosen}">
                    <AutoSuggestBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Title}"/>
                        </DataTemplate>
                    </AutoSuggestBox.ItemTemplate>
                </AutoSuggestBox>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock x:Uid="TBSortBy" Text="Sort by" Margin="8,0,0,2" VerticalAlignment="Center" FontSize="15"/>
                    <ComboBox Margin="4,0,8,0" 
                            BorderThickness="0" 
                            Width="Auto" 
                            VerticalAlignment="Center"
                            ItemsSource="{x:Bind ViewModel.ComboBoxItemValues}"
                            DisplayMemberPath="Label"
                            SelectedItem="{x:Bind ViewModel.SelectedComboBoxItem, Converter={StaticResource ComboBoxItemValueConverter}, Mode=TwoWay}"/>
                </StackPanel>
            </Grid>
            <SemanticZoom Grid.Row="1">
                <SemanticZoom.ZoomedInView>
                    <mycontrols:AlternatingRowListView x:Name="SongsListView"
                            EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                            OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                            ItemsSource="{Binding Source={StaticResource SongsCVS}}"
                            ItemTemplate="{StaticResource SongsListViewItemTemplateDesktop}"
                            SelectionMode="None"
                            IsItemClickEnabled="True"
                            ItemClick="{x:Bind ViewModel.ItemClicked }"
                            Margin="12,4,0,0"
                                                       ShowsScrollingPlaceholders="False"
                            ItemContainerStyle="{StaticResource ZoomedInListViewItemContainerStyle}"
                            CanDragItems="True"
                            DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                        <mycontrols:AlternatingRowListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </mycontrols:AlternatingRowListView.ItemsPanel>
                        <mycontrols:AlternatingRowListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource GroupHeaderItemTemplate}" 
                                        HeaderContainerStyle="{StaticResource GroupHeaderContainerStyle}"/>
                        </mycontrols:AlternatingRowListView.GroupStyle>
                    </mycontrols:AlternatingRowListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView x:Name="ZoomedOutListView"
                            ItemsSource="{Binding Source={StaticResource SongsCVS}, Path=CollectionGroups}"
                            ItemTemplate="{StaticResource ZoomedOutItemsTemplate}"
                            ItemContainerStyle="{StaticResource ZoomedOutItemContainerStyle}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsWrapGrid Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </Grid>
    </Grid>
</Page>
