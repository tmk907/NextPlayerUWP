<Page
    x:Class="NextPlayerUWP.Views.GenresView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NextPlayerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:NextPlayerUWP.Helpers"
    xmlns:data="using:NextPlayerUWPDataLayer.Model"
    xmlns:controls="using:Template10.Controls"
    xmlns:mycontrols="using:NextPlayerUWP.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkitcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    DataContext="{Binding Source={StaticResource Locator}, Path=GenresVM}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <MenuFlyout x:Key="ContextMenu">
            <MenuFlyoutItem x:Uid="MFIPlayNow" Text="Play now" 
                            Click="{x:Bind ViewModel.PlayNow}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIPlayNext" Text="Play next" 
                            Click="{x:Bind ViewModel.PlayNext}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem x:Uid="MFIAddToNowPlaying" Text="Add to now playing" 
                            Click="{x:Bind ViewModel.AddToNowPlaying}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIAddToPlaylist" Text="Add to playlist" 
                            Click="{x:Bind ViewModel.AddToPlaylist}" CommandParameter="{Binding}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Uid="MFIPin" Text="Pin" 
                            Click="{x:Bind ViewModel.Pin}" CommandParameter="{Binding}"/>
            <!--<MenuFlyoutItem x:Uid="MFIShare" Text="Share" 
                            Click="{x:Bind ViewModel.Share}" CommandParameter="{Binding}"/>-->
        </MenuFlyout>
        <Style x:Key="ItemStyleLeft" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{ThemeResource ListItemForegroundSolid}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="ItemStyleRight" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{ThemeResource ListItemForegroundLight}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        <DataTemplate x:Key="GenreItemTemplateMobile" x:DataType="data:GenreItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="Add" 
	            LeftLabel="Queue" 
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*" MinWidth="80"/>
                        <ColumnDefinition Width="*"  MinWidth="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                    Text="{x:Bind Genre}"
                    Style="{StaticResource ItemStyleLeft}"/>
                    <TextBlock Grid.Column="1"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource ItemStyleRight}"/>
                    <TextBlock Grid.Column="2"
                    Text="{x:Bind SongsNumber}"
                    Style="{StaticResource ItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="GenreItemTemplateDesktop" x:DataType="data:GenreItem">
            <toolkitcontrols:SlidableListItem
                LeftIcon="Add" 
	            LeftLabel="Queue" 
	            LeftBackground="{StaticResource UserAccentBrush}" 
	            LeftForeground="White" 
	            ActivationWidth="100"
                Background="Transparent"
	            LeftCommandRequested="SlidableListItem_LeftCommandRequested"
                IsRightCommandEnabled="False">
                <Grid RightTapped="ListViewItem_RightTapped" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*" MinWidth="80"/>
                        <ColumnDefinition Width="*"  MinWidth="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                    Text="{x:Bind Genre}"
                    Style="{StaticResource ItemStyleLeft}"/>
                    <TextBlock Grid.Column="1"
                    Text="{x:Bind Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                    Style="{StaticResource ItemStyleRight}"/>
                    <TextBlock Grid.Column="2"
                    Text="{x:Bind SongsNumber}"
                    Style="{StaticResource ItemStyleRight}"/>
                </Grid>
            </toolkitcontrols:SlidableListItem>
        </DataTemplate>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GenresListView.ItemTemplate" Value="{StaticResource GenreItemTemplateMobile}"/>
                        <Setter Target="Column1.Width" Value="0"/>
                        <Setter Target="Column3Search.Width" Value="*"/>
                        <Setter Target="GenresListView.CanDragItems" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GenresListView.ItemTemplate" Value="{StaticResource GenreItemTemplateDesktop}"/>
                        <Setter Target="Column1.Width" Value="*"/>
                        <Setter Target="Column3Search.Width" Value="200"/>
                        <Setter Target="GenresListView.CanDragItems" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <controls:PageHeader Grid.Row="0"
                BackButtonVisibility="Collapsed" 
                Frame="{x:Bind Frame, Mode=OneWay}"
                x:Uid="PageHeaderGenres"
                Content="Genres" 
                VisualStateNarrowMinWidth="0" 
                VisualStateNormalMinWidth="720"/>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Gray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="Column1"/>
                    <ColumnDefinition x:Name="Column2Sort" Width="Auto"/>
                    <ColumnDefinition x:Name="Column3Search" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <AutoSuggestBox  Grid.Column="2" 
                    PlaceholderText="search" 
                    QueryIcon="Find" 
                    Margin="4,0,12,0" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    TextChanged="{x:Bind ViewModel.AutoSuggestBox_TextChanged}"
                    QuerySubmitted="{x:Bind ViewModel.AutoSuggestBox_QuerySubmitted}"
                    SuggestionChosen="{x:Bind ViewModel.AutoSuggestBox_SuggestionChosen}">
                    <AutoSuggestBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Genre}"/>
                        </DataTemplate>
                    </AutoSuggestBox.ItemTemplate>
                </AutoSuggestBox>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock x:Uid="TBSortBy" Text="Sort by" Margin="8,0,0,2" VerticalAlignment="Center" FontSize="15"/>
                    <ComboBox Margin="4,0,8,0" 
                            BorderThickness="0" 
                            Width="Auto" 
                            VerticalAlignment="Center"
                            ItemsSource="{x:Bind ViewModel.ComboBoxItemValues}"
                            DisplayMemberPath="Label"
                            SelectedItem="{x:Bind ViewModel.SelectedComboBoxItem, Converter={StaticResource ComboBoxItemValueConverter}, Mode=TwoWay}"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="0">
                <mycontrols:AlternatingRowListView x:Name="GenresListView"
                    EvenRowBackground="{ThemeResource ListViewItemBackgroundSecond}"
                    OddRowBackground="{ThemeResource ListViewItemBackgroundNormal}"
                    ItemsSource="{Binding Genres}"
                    Margin="12,0,0,0"
                    IsItemClickEnabled="True"
                    ItemClick="{x:Bind ViewModel.ItemClicked }"
                    SelectionMode="None"
                    ItemContainerStyle="{StaticResource ListViewItemContainerStyle4}"
                    CanDragItems="False"
                    DragItemsStarting="{x:Bind ViewModel.DragStarting}">
                    <mycontrols:AlternatingRowListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </mycontrols:AlternatingRowListView.ItemsPanel>
                </mycontrols:AlternatingRowListView>
            </Grid>
        </Grid>
    </Grid>
</Page>
